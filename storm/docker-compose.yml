version: '3.1'

services:
    zookeeper:
        image: zookeeper
        deploy:
            restart_policy:
                condition: on-failure
            replicas: 1
            placement:
                constraints:
                - node.role == manager
            #resources:
                #limits:
                    #cpus: "0.10"
                    #memory: "128M"
                #reservations:
                    #cpus: "0.05"
                    #memory: "64M"
                
    rabbit:
        image: rabbitmq:3-management
        deploy:
            restart_policy:
                condition: on-failure
            replicas: 1
            placement:
                constraints:
                - node.role == manager
        ports:
            - 15672:15672         
            - 5672:5672                

    nimbus:
        image: alogo53/docker-storm
        environment:
            TOPOLOGY_URL: https://github.com/skoulouzis/lightning/releases/download/v0.1-beta/lightning-0.0.1-SNAPSHOT-jar-with-dependencies.jar
            TOPOLOGY_NAME: lightning
            TOPOLOGY_MAIN: de.pangaea.lightning.ENVRI_NRTQualityCheck
            TOPOLOGY_ARGS: arg1 arg2
            INFLUX_URI: http://influx:8086
            RABBIT_HOST: rabbit
        depends_on:
            - zookeeper
            - rabbit
            - influx
        deploy:
            restart_policy:
                condition: on-failure
            replicas: 1             
        ports:
            - 6627:6627          

#worker 
    supervisor:
        image: storm
        environment:
            INFLUX_URI: http://influx:8086
            RABBIT_HOST: rabbit            
        command: storm supervisor
        depends_on:
            - nimbus
            - zookeeper
            - rabbit
            - influx
        deploy:
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: '0.3'
                    memory: '1500M'
        ports:
            - 8000:8000     
            
    data_reader:
        image: alogo53/observations-influx
        environment:
            RABBIT_HOST: rabbit
            RABBIT_PORT: 15672
            RABBIT_USERNAME: guest
            RABBIT_PASSWORD: guest
            INFLUX_HOST: influx
            INFLUX_PORT: 8086
            INFLUX_DB: mydb
            QUEUE_NAME: measures_quality_controlled
        depends_on:
            - rabbit
            - influx
        deploy:
            restart_policy:
                condition: on-failure
            replicas: 1
            #resources:
                #limits:
                    #cpus: "0.5"
                    #memory: "32M"
                #reservations:
                    #cpus: "0.5"
                    #memory: "16M"
            
            
    ui:
        image: storm
        command: storm ui -c nimbus.host=nimbus
        depends_on:
            - nimbus
            - zookeeper
            - supervisor
        deploy:
            restart_policy:
                condition: on-failure
            replicas: 1
        ports:
            - 8081:8080
            
        
      
            
############### monitoring#####################
    influx:
        image: influxdb
        environment:
            INFLUXDB_DB: cadvisor
        #volumes:
            #- influx:/var/lib/influxdb
        deploy:
            replicas: 1
            #resources:
                #limits:
                    #cpus: "0.10"
                    #memory: "128M"
                #reservations:
                    #cpus: "0.05"
                    #memory: "64M"
                    
    rabbit-reporter :
        image: alogo53/rabbit-metrics-reporter
        environment:
            RABBIT_HOST: rabbit
            RABBIT_PORT: 15672
            RABBIT_USERNAME: guest
            RABBIT_PASSWORD: guest
            INFLUX_HOST: influx
            INFLUX_PORT: 8086
            INFLUX_DB: mydb
            REPORT_INTERVAL: 10
        depends_on:
            - rabbit
            - influx    
        deploy:
            replicas: 1
            #resources:
                #limits:
                    #cpus: "0.5"
                    #memory: "32M"
                #reservations:
                    #cpus: "0.5"
                    #memory: "16M"

    grafana:
        image: grafana/grafana
        environment:
            DS_NAME: InfluxDB
            DS_TYPE: InfluxDB
            DS_ACCESS: proxy
            DS_URL: http://influx:8086
            DS_DB: cadvisor
        ports:
            - 3000:3000
        #volumes:
            #- grafana:/var/lib/grafana
        depends_on:
            - influx
        deploy:
            replicas: 1
            #placement:
                #constraints:
                #- node.role == manager
            #resources:
                #limits:
                    #cpus: "0.10"
                    #memory: "128M"
                #reservations:
                    #cpus: "0.05"
                    #memory: "64M"
                    
                    
    #chronograf:
        #image: chronograf
        #ports:
            #- 8888:8888
        #command: chronograf --influxdb-url=http://influx:8086
        #depends_on:
            #- influx
        #deploy:
            #replicas: 1
            ##placement:
                ##constraints:
                ##- node.role == manager

    cadvisor:
        image: google/cadvisor
        ports:
            - 0.0.0.0:8080:8080
        hostname: '{{.Node.ID}}'
        command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influx:8086
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
            - influx
        deploy:
            mode: global
            #resources:
                #limits:
                    #cpus: "0.05"
                    #memory: "32M"
                #reservations:
                    #cpus: "0.025"
                    #memory: "16M"
            
            
    #logspout:
        #image: gliderlabs/logspout:latest
        #networks:
            #- logging
        #volumes:
            #- /etc/hostname:/etc/host_hostname:ro
            #- /var/run/docker.sock:/var/run/docker.sock
        #ports:
            #- "8001:80"
        #deploy:
            #mode: global
            #resources:
                #limits:
                    #cpus: "0.10"
                    #memory: "128M"
                #reservations:
                    #cpus: "0.05"
                    #memory: "64M"
        #networks:
            #- monitoring       
            
    #influx:
        #image: influxdb
        #environment:
            #INFLUXDB_DB: mydb
        #volumes:
            #- influx:/var/lib/influxdb            
          

#volumes:
  #influx:
    #driver: local
  #grafana:
    #driver: local 